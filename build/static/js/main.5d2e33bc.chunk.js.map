{"version":3,"sources":["services/httpService.js","services/authService.js","Components/Common/NavBar.jsx","Components/Notfound.jsx","services/movieService.js","Components/Common/Heart.jsx","Components/Common/TableHeader.jsx","Components/Common/TableBody.jsx","Components/Common/Table.jsx","Components/MoviesTable.jsx","Components/Common/Pagination.jsx","services/genreService.js","Components/Common/Genre.jsx","Components/Common/searchQuery.jsx","Components/Counter.jsx","utils/Paginate.js","Components/Rentals.jsx","Components/Customer.jsx","Components/Common/Input.jsx","Components/Common/select.jsx","Components/Common/Form.jsx","Components/LoginForm.jsx","services/userService.js","Components/registerForm.jsx","Components/addMovie.jsx","Components/logout.jsx","Components/Common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","login","email","password","a","async","http","data","localStorage","setItem","getCurrentUser","getItem","jwtDecode","Nav","user","className","to","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Fragment","name","Notfound","endPoint","movieUrl","saveMovie","movie","_id","body","Like","props","style","cursor","liked","aria-hidden","onClick","onAttacked","TableHeader","renderSort","column","sortColumn","path","order","raiseSort","onSort","columns","this","map","key","label","Component","TableBody","renderCell","item","content","isAdmin","_","Table","MoviesTable","title","onLike","onDelete","movies","Pagination","count","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","getGenres","Genre","items","onItemSelect","selectedGenre","genre","SearchQuery","value","onChange","e","currentTarget","placeholder","Counter","state","genres","searchQuery","handleGenreChange","setState","handlePageChange","pageNumber","handleLike","index","indexOf","handleDelete","originalState","filter","m","movieId","toast","handleSearch","query","currentGenre","handleSort","pagedDate","allMovies","filtered","toLowerCase","startsWith","slice","take","paginate","orderBy","countValue","length","renderMovies","movieData","Rentals","Customer","Input","rest","htmlFor","Select","options","option","Form","username","errors","validate","Joi","schema","abortEarly","details","message","handleSubmit","preventDefault","doSubmit","validateProperty","obj","handleChange","input","errorMessage","renderSelect","disabled","LoginForm","string","required","min","location","window","from","pathname","onSubmit","renderInput","renderButton","Register","AddMovie","genreId","numberInStock","dailyRentalRate","number","max","populateGenres","populateMovieForm","match","history","params","mapToModel","replace","push","Logout","removeItem","ProtectedRoute","component","render","App","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d2e33bc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(\"Something failed\");\r\n    // logger.log(error);\r\n    // toast.error(\"Something failed\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  const jwt = localStorage.getItem(tokenKey);\r\n  try {\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function storeToken(input) {\r\n  localStorage.setItem(tokenKey, input);\r\n}\r\n\r\nexport function logOut() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getJWt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\nhttp.setJwt(getJWt());\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nconst Nav = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg  navbar-light bg-light\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <NavLink to=\"/movies\" className=\"nav-item nav-link\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink to=\"/customers\" className=\"nav-item nav-link\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink to=\"/rentals\" className=\"nav-item nav-link\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink to=\"/login\" className=\"nav-item nav-link\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink to=\"/register\" className=\"nav-item nav-link\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink to=\"/profile\" className=\"nav-item nav-link\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink to=\"/logout\" className=\"nav-item nav-link\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nconst Notfound = () => {\r\n  return <h1>NOT FOUND</h1>;\r\n};\r\n\r\nexport default Notfound;\r\n","import http from \"./httpService\";\r\nconst endPoint = \"/movies/\";\r\nexport function getMovies() {\r\n  return http.get(endPoint);\r\n}\r\n\r\nfunction movieUrl(id) {\r\n  return `${endPoint}${id}`;\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(endPoint, movie);\r\n}\r\n","import React from \"react\";\r\nconst Like = props => {\r\n  return (\r\n    <i\r\n      style={{ cursor: \"pointer\" }}\r\n      className={props.liked ? \"fa fa-heart\" : \"fa fa-heart-o\"}\r\n      aria-hidden=\"false\"\r\n      onClick={() => props.onAttacked(props.movie)}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  //sortColumn\r\n  //onSort\r\n  //columns\r\n\r\n  renderSort = column => {\r\n    const { sortColumn } = this.props;\r\n    if (sortColumn.path !== column.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map(column => (\r\n            <th\r\n              key={column.key || column.path}\r\n              className=\"cickable\"\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSort(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\nclass TableBody extends Component {\r\n  user = getCurrentUser();\r\n  renderCell = (item, column) => {\r\n    if (column.content)\r\n      return column.content(item, this.user || { isAdmin: false });\r\n    return _.get(item, column.path);\r\n  };\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={item.id + (column.path || column.key)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./TableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table table-dark mb-10\">\r\n      <TableHeader onSort={onSort} sortColumn={sortColumn} columns={columns} />\r\n      <TableBody\r\n        data={data}\r\n        columns={columns}\r\n        // onLike={onLike}\r\n        // onDelete={onDelete}\r\n      />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./Common/Heart\";\r\nimport Table from \"./Common/Table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like\r\n          liked={movie.liked}\r\n          movie={movie}\r\n          onAttacked={this.props.onLike}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie, user) =>\r\n        user.isAdmin && (\r\n          <button\r\n            key={movie.id}\r\n            onClick={() => this.props.onDelete(movie)}\r\n            className=\"btn btn-danger btn-sm\"\r\n          >\r\n            Delete\r\n          </button>\r\n        )\r\n    }\r\n  ];\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n        columns={this.columns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport propTypes from \"prop-types\";\r\nconst Pagination = ({ count, pageSize, onPageChange, currentPage }) => {\r\n  const pagesCount = Math.ceil(count / pageSize);\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  if (pagesCount === 1) return null;\r\n  return (\r\n    <React.Fragment>\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          {pages.map(page => (\r\n            <li\r\n              key={page}\r\n              className={\r\n                currentPage === page ? \"page-item active\" : \"page-item\"\r\n              }\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              <a className=\"page-link\">{page}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  count: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  onPageChange: propTypes.func.isRequired,\r\n  currentPage: propTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React from \"react\";\r\nconst Genre = ({ items, onItemSelect, selectedGenre }) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(genre => (\r\n        <li\r\n          onClick={() => onItemSelect(genre)}\r\n          className={\r\n            selectedGenre === genre\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n          key={genre.name}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          {genre.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","import React from \"react\";\r\nconst SearchQuery = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n      value={value}\r\n      placeholder=\"Search....\"\r\n      type=\"text\"\r\n      className=\"form-control my-3\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchQuery;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport Pagination from \"./Common/Pagination\";\r\nimport { paginate } from \"../utils/Paginate\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Genre from \"./Common/Genre\";\r\nimport _ from \"lodash\";\r\nimport SearchQuery from \"./Common/searchQuery\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 3,\r\n    currentPage: 1,\r\n    genres: [],\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    searchQuery: \"\",\r\n    selectedGenre: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: movieData } = await getMovies();\r\n    const { data } = await getGenres();\r\n    const genres = [{ name: \"All Genres\" }, ...data];\r\n    this.setState({ movies: movieData, genres });\r\n  }\r\n\r\n  handleGenreChange = genre => {\r\n    this.setState({\r\n      selectedGenre: genre,\r\n      currentPage: 1,\r\n      searchQuery: \"\"\r\n    });\r\n  };\r\n\r\n  handlePageChange = pageNumber => {\r\n    this.setState({ currentPage: pageNumber });\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movie.liked = movie.liked ? false : true;\r\n    movies[index] = movie;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"container\">{this.renderMovies()}</div>;\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalState = this.state.movies;\r\n    const movies = originalState.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted\");\r\n\r\n      this.setState({ movies: originalState });\r\n    }\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentGenre: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn: sortColumn });\r\n  };\r\n  pagedDate = () => {\r\n    const {\r\n      searchQuery,\r\n      pageSize,\r\n      currentPage,\r\n      selectedGenre,\r\n      sortColumn,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n\r\n    if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre.name === selectedGenre.name);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    return { countValue: filtered.length, data: movies };\r\n  };\r\n\r\n  renderMovies = () => {\r\n    const { movies: allMovies } = this.state;\r\n    const { user } = this.props;\r\n    // if (allMovies.length === 0)\r\n    //   return <h1 className=\"text text-danger\">No Movies In Database</h1>;\r\n    const {\r\n      searchQuery,\r\n      pageSize,\r\n      currentPage,\r\n      genres,\r\n      selectedGenre\r\n    } = this.state;\r\n    const { countValue, data: movies } = this.pagedDate();\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row mt-10\">\r\n          <div className=\"col-sm-12 col-sm-md-3 col-lg-3\">\r\n            <Genre\r\n              items={genres}\r\n              onItemSelect={this.handleGenreChange}\r\n              selectedGenre={selectedGenre}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-sm-md-9 col-lg-9\">\r\n            {user && (\r\n              <Link to=\"/movies/newmovie\" className=\"btn btn-primary my-3\">\r\n                New Movie\r\n              </Link>\r\n            )}\r\n            <SearchQuery value={searchQuery} onChange={this.handleSearch} />\r\n            <h1>Showing {countValue} From The Database</h1>\r\n            <MoviesTable\r\n              movies={movies}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n              sortColumn={this.state.sortColumn}\r\n            />\r\n            <Pagination\r\n              count={countValue}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Counter;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const index = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(index)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\nconst Customer = () => {\r\n  return <h1>Customer</h1>;\r\n};\r\n\r\nexport default Customer;\r\n","import React from \"react\";\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nconst Select = ({ error, value, options, name, onChange, label }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select\r\n        onChange={onChange}\r\n        name={name}\r\n        id=\"\"\r\n        value={value}\r\n        className=\"form-control\"\r\n      >\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\"></div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./select\";\r\nclass Form extends Component {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n  validate = () => {\r\n    const { error } = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false\r\n    });\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  doSubmit = () => {};\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button\r\n        onClick={this.handleSubmit}\r\n        disabled={this.validate()}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        onChange={this.handleChange}\r\n        label={label}\r\n        options={options}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"./Common/Form\";\r\nimport { login, getCurrentUser } from \"../services/authService\";\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await login(data.username, data.password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"User Name\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst endPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(endPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./Common/Form\";\r\nimport { register } from \"../services/userService\";\r\nimport { storeToken } from \"./../services/authService\";\r\nclass Register extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .min(5)\r\n      .required()\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .min(5)\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      storeToken(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        {this.renderInput(\"username\", \"Username\")}\r\n        {this.renderInput(\"password\", \"Password\", \"password\")}\r\n        {this.renderInput(\"name\", \"Name\")}\r\n        {this.renderButton(\"Register\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./Common/Form\";\r\nimport { getMovie, saveMovie } from \"./../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nclass AddMovie extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\"\r\n    },\r\n    errors: {},\r\n    genres: []\r\n  };\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .min(1)\r\n      .max(11)\r\n      .required()\r\n      .label(\"Rate\")\r\n  };\r\n\r\n  populateGenres = async () => {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  };\r\n\r\n  populateMovieForm = async () => {\r\n    const { match, history } = this.props;\r\n    try {\r\n      if (this.props.match.params.id === \"newmovie\") return null;\r\n\r\n      const { data: movie } = await getMovie(match.params.id);\r\n      this.mapToModel(movie);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        history.replace(\"/not-found\");\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovieForm();\r\n  }\r\n\r\n  mapToModel = movie => {\r\n    const data = { ...this.state.data };\r\n    data._id = movie._id;\r\n    data.title = movie.title;\r\n    data.genreId = movie.genre._id;\r\n    data.numberInStock = movie.numberInStock;\r\n    data.dailyRentalRate = movie.dailyRentalRate;\r\n    this.setState({ data });\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { data } = this.state;\r\n\r\n    try {\r\n      await saveMovie(data);\r\n      this.props.history.push(\"/\");\r\n    } catch (ex) {\r\n      toast.error(\"Movie could not be saved\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderInput(\"title\", \"Title\")}\r\n        {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n        {this.renderInput(\"numberInStock\", \"Stock\", \"number\")}\r\n        {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\r\n        {this.renderButton(\"Add\")}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddMovie;\r\n","import { Component } from \"react\";\r\nimport { logOut } from \"./../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    logOut();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getCurrentUser } from \"../../services/authService\";\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { getCurrentUser } from \"./services/authService\";\nimport Nav from \"./Components/Common/NavBar\";\nimport Notfound from \"./Components/Notfound\";\nimport Counter from \"./Components/Counter\";\nimport Rentals from \"./Components/Rentals\";\nimport Customer from \"./Components/Customer\";\nimport LoginForm from \"./Components/LoginForm\";\nimport Register from \"./Components/registerForm\";\nimport AddMovie from \"./Components/addMovie\";\nimport Logout from \"./Components/logout\";\nimport ProtectedRoute from \"./Components/Common/protectedRoute\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <div>\n        <ToastContainer />\n        <Nav user={user} />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={AddMovie} />\n            <Route\n              path=\"/movies\"\n              render={props => <Counter {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customer} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={Notfound} />\n            <Route\n              path=\"/\"\n              exact\n              render={props => <Counter {...props} user={user} />}\n            />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(process.env);\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}